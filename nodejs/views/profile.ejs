<!-- views/profile.ejs -->
<!doctype html>
<html>
<head>
    <title>Your IoT Command and Control Center</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css">
    <script type="text/javascript" src="//ajax.googleapis.com/ajax/libs/jquery/2.0.0/jquery.min.js"></script>
    <script type="text/javascript" src="/qrcode.js"></script>
    <style>
        body { 
          padding-top:80px; 
          word-wrap:break-word; 
        }
    </style>
    <style>
	/* The Overlay (background) */
	.overlay {
	    /* Height & width depends on how you want to reveal the overlay (see JS below) */   
	    height: 100%;
	    width: 0;
	    position: fixed; /* Stay in place */
	    z-index: 1; /* Sit on top */
	    left: 0;
	    top: 0;
	    background-color: rgb(0,0,0); /* Black fallback color */
	    background-color: rgba(0,0,0, 0.9); /* Black w/opacity */
	    overflow-x: hidden; /* Disable horizontal scroll */
	    transition: 0.5s; /* 0.5 second transition effect to slide in or slide down the overlay (height or width, depending on reveal) */
	}

	/* Position the content inside the overlay */
	.overlay-content {
	    position: relative;
	    top: 25%; /* 25% from the top */
	    width: 100%; /* 100% width */
	    text-align: -moz-center; /* Centered text/links */
            text-align: center;
	    margin-top: 30px; /* 30px top margin to avoid conflict with the close button on smaller screens */
	}

	/* The navigation links inside the overlay */
	.overlay a {
	    padding: 8px;
	    text-decoration: none;
	    font-size: 36px;
	    color: #818181;
	    display: block; /* Display block instead of inline */
	    transition: 0.3s; /* Transition effects on hover (color) */
	}

	/* When you mouse over the navigation links, change their color */
	.overlay a:hover, .overlay a:focus {
	    color: #f1f1f1;
	}

	/* Position the close button (top right corner) */
	.overlay .closebtn {
	    position: absolute;
	    top: 20px;
	    right: 45px;
	    font-size: 60px;
	}

	/* When the height of the screen is less than 450 pixels, change the font-size of the links and position the close button again, so they don't overlap */
	@media screen and (max-height: 450px) {
	    .overlay a {font-size: 20px}
	    .overlay .closebtn {
		font-size: 40px;
		top: 15px;
		right: 35px;
	    }
	}
    </style>
</head>
<body>

<!-- The overlay -->
<div id="myNav" class="overlay">

  <!-- Button to close the overlay navigation -->
  <a href="javascript:void(0)" class="closebtn" onclick="closeNav()">&times;</a>

  <!-- Overlay content -->
  <div id = "overlay"class="overlay-content">
    
  </div>

</div>
<div class="container">

    <div class="page-header text-center">
        <h1><span class="fa fa-anchor"></span> IoT Command and Control Center</h1>
	<a href="/addDevice" class="btn btn-default btn-sm">Add Device</a>
        <a href="/logout" class="btn btn-default btn-sm">Logout</a>
    </div>
	  
  
    <% if (message.length > 0) { %>
        <div class="alert alert-danger" id ="message_div"><%= message %></div>
    <% }else { %>
	<div class="alert alert-danger" id ="message_div" style = "display:none"></div>
    <% } %>
    <div class="row">

        <!-- LOCAL INFORMATION -->
        <div class="col-sm-6">
            <div class="well">
                <h3><span class="fa fa-user"></span> User Information</h3>
                    <p>
                        <strong>Id</strong>: <%= user.id %><br>
                        <strong>User Name</strong>: <%= user.username %><br>
                    </p>

            </div>
    <% if (deviceInfo && deviceInfo.length > 0) { %>
	    <% for(var j=0; j < deviceInfo.length; j++) { %>
            <div class="well" id = <%=deviceInfo[j].peer_id%>>
                <h4> Device <%= j+1 %></h4>
                    <p>
  			 <strong>Device Name</strong>: <%= deviceInfo[j].peer_name %><br>
			 <strong>Device Mac </strong>: <%= deviceInfo[j].peer_num %><br>
			 <%var id_val = 'Dcountdown' + j %>
			 <strong id = <%=id_val%> value1 = <%=deviceInfo[j].peer_id%> value2 = <%=deviceInfo[j].state_num%> >Device Status: <%= deviceInfo[j].state %></strong><br>
			 <div> </div>
			 <button onclick="openNav(this)" value1 = <%=deviceInfo[j].noob%> value2 = <%=deviceInfo[j].hoob%> value3 = <%=deviceInfo[j].peer_id%>>QR Code</button>
			 <button onclick="" value = <%=deviceInfo[j].peer_id%>>Delete</button> 
                    </p>
            </div>
	    <% } %>
    <% } %>

    <% if (userInfo && userInfo.length > 0) { %>
	    <% for(var i=0; i < userInfo.length; i++) { %>
            <div class="well" id = <%=userInfo[i].peer_id%>>
                <h4> Device <%= i+1 %></h4>
                    <p>
  			 <strong>Device Name</strong>: <%= userInfo[i].peer_name %><br>
			 <strong>Device Mac </strong>: <%= userInfo[i].peer_num %><br>
			 <strong>Software Status </strong>: <%= userInfo[i].dev_update %><br>
			 <%var id_val = 'Dcountdown' + i + j %>
			 <strong id = <%=id_val%> value1 = <%=userInfo[i].peer_id%> value2 = <%=userInfo[i].state_num%> >Device Status: <%= userInfo[i].state %></strong><br>
			 <%var id_val = 'countdown' + i + j %>
          		 <div id= <%=id_val%> value = <%=userInfo[i].sTime%> ></div>
			 <button onclick="deleteDevice(this)" value = <%=userInfo[i].peer_id%>>Delete</button> 
    			<% if (userInfo[i].dev_update != 'Up to date') { %>
			 	<button onclick="UpdateSoftware(this)" value = <%=userInfo[i].peer_id%>>update</button> 
    			<% } %>
                    </p>
            </div>
	    <% } %>
    <% } %>
        </div>

    </div>

</div>

<script>
function UpdateSoftware(peer_id){

}

function deletePost(peer_id){

	var url_str = "<%=url%>";
	url_str = url_str + "/deleteDevice/?PeerId=" + peer_id; 
	console.log(url_str);
        var xhttp = new XMLHttpRequest();
  	xhttp.onreadystatechange = function() {
    		if (xhttp.readyState == 4 && xhttp.status == 200) {
			var obj = JSON.parse(xhttp.responseText)
			if(obj.status == "success"){
				document.getElementById(peer_id).remove();
				var div_alert = document.getElementById('message_div');
				div_alert.innerHTML = "Device Deleted Successfully";
				div_alert.style.display='block';
				setTimeout(hideAlert, 6000);
			}
			else if(obj.status == "refresh"){

				var retVal = confirm("Stale Page. Do you want to refresh the page ?");
   				if (retVal == true) {
	    				window.location.reload();
   				} else {
    	
   				}	
			}
			else{
				document.getElementById('message_div').innerHTML = "Device Delete Unsuccessful";
				div_alert.style.display='block';
				setTimeout(hideAlert, 6000);				
			}
			
    		}
  	};
  	xhttp.open("GET", url_str, true);
  	xhttp.send();

}


function deleteDevice(button){
 
   var retVal = confirm("Are you sure you want to delete this device permanently ?");
   if (retVal == true) {
    	deletePost(button.getAttribute("value"));
   } else {
    	
   }	
}

function postItem(element,post_interval,interval,div_element) {
	var el = document.getElementById(element);
	var peer_id = el.getAttribute("value1");
	var peer_state = el.getAttribute("value2");
	var div = document.getElementById(div_element);
	var url_str = "<%=url%>";
	url_str = url_str + "/stateUpdate/?PeerId=" + peer_id + "&State=" + peer_state; 
	//console.log(url_str);
        var xhttp = new XMLHttpRequest();
  	xhttp.onreadystatechange = function() {
    		if (xhttp.readyState == 4 && xhttp.status == 200) {
			var obj = JSON.parse(xhttp.responseText);
			if(obj.state == ""){
      				console.log("No State change");
			}
			else{
				clearInterval(post_interval);
				clearInterval(interval);
				div.style.display='none';
				el.innerHTML = "Device Status: " + obj.state;
				el.setAttribute("value2",obj.state_num);
			}
			
    		}
  	};
  	xhttp.open("GET", url_str, true);
  	xhttp.send();

}//postItem()

function hideAlert(){	
	var alert_div = document.getElementById('message_div');
	if(alert_div)
	alert_div.style.display='none';
}

setTimeout(hideAlert, 6000);

function countdown(element, minutes, seconds) {
    // Fetch the display element
    var el = document.getElementById(element);
    var eld = 'D' + element; 
    // Set the timer
    var post_interval = setInterval(function() {
        postItem(eld,post_interval, interval,element);
    }, 5000);

    var interval = setInterval(function() {
        if(seconds == 0) {
            if(minutes == 0) {
                (el.innerHTML = "Authenticating Please Wait... ");     
                clearInterval(interval);
		
                return;
            } else {
                minutes--;
                seconds = 60;
            }
        }

        if(minutes > 0) {
            var minute_text = minutes + (minutes > 1 ? ' minutes' : ' minute');
        } else {
            var minute_text = '';
        }

        var second_text = seconds > 1 ? 'seconds' : 'second';
        el.innerHTML = 'Please wait for:' + minute_text + ' ' + seconds + ' ' + second_text + '';
        seconds--;
    }, 1000);

   

}

function callTimers(){
	var element;
	var elm;	
	for(i=0;;i++){
		element = 'countdown' + i;
		elm = 'Dcountdown' + i;
		console.log(element);
		var el = document.getElementById(element);
		if(el){
			var sec = el.getAttribute("value");
			console.log(sec + ':' + parseInt(sec));
			var state = document.getElementById(elm).getAttribute("value2");
			if(parseInt(state) != 4 && parseInt(state) != 0) 
			countdown(element,0,parseInt(sec));
		}
		else
		break;	
	}
}

callTimers();

/* Open when someone clicks on the span element */
function openNav(btn) {
    document.getElementById("myNav").style.width = "100%";
    
    var val = "https://127.0.0.1:8080/?PeerID="+btn.getAttribute("value3")+"&Noob=" + btn.getAttribute("value1") + "&Hoob=" + btn.getAttribute("value2");
    var overlay = document.getElementById("overlay");
    overlay.setAttribute("style", "background-color: white;")
    var content = document.createElement('div');
    content.setAttribute("id","overlayContent");
    content.setAttribute("style","text-align:-moz-center;");
    overlay.appendChild(content);
    var qrcode = new QRCode(content, {
			 width : 300,
			 height : 300
    });
    qrcode.makeCode(val);
}

/* Close when someone clicks on the "x" symbol inside the overlay */
function closeNav() {
    document.getElementById("myNav").style.width = "0%";
    document.getElementById("overlayContent").remove();
}
</script>

</body>
</html>
