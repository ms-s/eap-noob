<!-- views/profile.ejs -->
<!doctype html>
<html>
<head>
    <title>Your IoT Command and Control Center</title>
    <% include ./head %>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!--<link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css">-->
    <!--<link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css">-->
    <script type="text/javascript" src="//ajax.googleapis.com/ajax/libs/jquery/2.0.0/jquery.min.js"></script>
    <script type="text/javascript" src="/qrcode.js"></script>
    <style>
        body {
          word-wrap:break-word; 
        }

        footer.mdl-mini-footer {
            background-color: #ffffff;
            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 1);
            padding-top: 0px;
            padding-right: 0px;
            padding-left: 0px;
            padding-bottom: 0px;
            height: 110px;
        }
    </style>
    <style>
	/* The Overlay (background) */
	.overlay {
	    /* Height & width depends on how you want to reveal the overlay (see JS below) */   
	    height: 100%;
	    width: 0;
	    position: fixed; /* Stay in place */
	    z-index: 1; /* Sit on top */
	    left: 0;
	    top: 0;
	    background-color: rgb(0,0,0); /* Black fallback color */
	    background-color: rgba(0,0,0, 0.9); /* Black w/opacity */
	    overflow-x: hidden; /* Disable horizontal scroll */
	    transition: 0.5s; /* 0.5 second transition effect to slide in or slide down the overlay (height or width, depending on reveal) */
	}

	/* Position the content inside the overlay */
	.overlay-content {
	    position: relative;
	    top: 25%; /* 25% from the top */
	    width: 100%; /* 100% width */
	    text-align: -moz-center; /* Centered text/links */
            text-align: center;
	    margin-top: 30px; /* 30px top margin to avoid conflict with the close button on smaller screens */
	}

	/* The navigation links inside the overlay */
	.overlay a {
	    padding: 8px;
	    text-decoration: none;
	    font-size: 36px;
	    color: #818181;
	    display: block; /* Display block instead of inline */
	    transition: 0.3s; /* Transition effects on hover (color) */
	}

	/* When you mouse over the navigation links, change their color */
	.overlay a:hover, .overlay a:focus {
	    color: #f1f1f1;
	}

	/* Position the close button (top right corner) */
	.overlay .closebtn {
	    position: absolute;
	    top: 20px;
	    right: 45px;
	    font-size: 60px;
	}

	/* When the height of the screen is less than 450 pixels, change the font-size of the links and position the close button again, so they don't overlap */
	@media screen and (max-height: 450px) {
	    .overlay a {font-size: 20px}
	    .overlay .closebtn {
		font-size: 40px;
		top: 15px;
		right: 35px;
	    }
	}
    </style>
</head>
<body>

<!-- Always shows a header, even in smaller screens. -->
<div class="mdl-layout mdl-js-layout mdl-layout--fixed-header mdl-layout--no-drawer-button">

<!-- The overlay -->
<div id="myNav" class="overlay">

  <!-- Button to close the overlay navigation -->
  <a href="javascript:void(0)" class="closebtn" onclick="closeNav()">&times;</a>

  <!-- Overlay content -->
  <div id = "overlay"class="overlay-content">
    
  </div>

</div>

    <header class="mdl-layout__header">
        <div class="mdl-layout__header-row">
            <i class="material-icons" style="padding-right: 8px">device_hub</i>
            <!-- Title -->
            <span class="mdl-layout-title"><%=UserName + "\'S HUB" %></span>
            <!-- Add spacer, to align navigation to the right -->
            <div class="mdl-layout-spacer"></div>
            <!-- Navigation. We hide it in small screens. -->
            <button id="demo-menu-lower-right"
                    class="mdl-button mdl-js-button mdl-button--icon">
                <i class="material-icons">more_vert</i>
            </button>
            <ul class="mdl-menu mdl-menu--bottom-right mdl-js-menu mdl-js-ripple-effect"
                for="demo-menu-lower-right">
                <li class="mdl-menu__item" onclick="gotoAddDevice()">Add Devices</li>
                <li class="mdl-menu__item" onclick="checkUpdate()">Check Updates</li>
                <li class="mdl-menu__item" onclick="gotoLogout()">Log Out</li>
            </ul>
        </div>
    </header>

    <main class="mdl-layout__content">

        <div class="page-content">
            <div class="mdl-grid" id="notifications">
                <% NotificationList.forEach(function(notification) { %>
                <div class="mdl-cell mdl-cell--4-col" id="<%=notification.NotificationID%>">
                    <div class="mdl-card mdl-shadow--2dp" style="width:100%;">
                        <div class="mdl-card__title">
                            <h2 class="mdl-card__title-text">
                                <%if (notification.NotificationType === "SoftwareUpdate") {%>
                                    Software Update
                                <%} else if (notification.NotificationType === "VideoListUpdate") {%>
                                    New Vedio for You
                                <%} else {%>
                                    New Audio for You
                                <%}%>
                            </h2>
                        </div>
                        <div class="mdl-card__supporting-text">
                            <%=notification.Description %>
                        </div>
                        <div class="mdl-card__actions mdl-card--border">
                            <%if (notification.NotificationType === "SoftwareUpdate") {%>
                                <a class="mdl-button mdl-button--colored mdl-js-button mdl-js-ripple-effect"
                                   onclick="notificationAction(this, '<%=notification.NotificationID%>', 'details', 'SoftwareUpdate')">
                                    Details
                                </a>
                                <a class="mdl-button mdl-button--colored mdl-js-button mdl-js-ripple-effect"
                                   onclick="notificationAction(this, '<%=notification.NotificationID%>', 'agree', 'SoftwareUpdate')">
                                    Agree
                                </a>
                                <a class="mdl-button mdl-button--colored mdl-js-button mdl-js-ripple-effect"
                                   onclick="notificationAction(this, '<%=notification.NotificationID%>', 'cancel',
                                           'SoftwareUpdate')">
                                    Cancel
                                </a>
                            <%} else {%>
                                <a class="mdl-button mdl-button--colored mdl-js-button mdl-js-ripple-effect"
                                   onclick="notificationAction(this, '<%=notification.NotificationID%>', 'details',
                                           '<%=notification.NotificationType%>')">
                                    Details
                                </a>
                                <a class="mdl-button mdl-button--colored mdl-js-button mdl-js-ripple-effect"
                                   onclick="notificationAction(this, '<%=notification.NotificationID%>', 'cancel',
                                           '<%=notification.NotificationType%>')">
                                    Cancel
                                </a>
                            <%}%>
                        </div>
                    </div>
                </div>
                <% });%>
            </div>

            <ul class="demo-list-three mdl-list">
                <% Devices.forEach(function(device) {%>
                <li class="mdl-list__item mdl-list__item--three-line">
                        <span class="mdl-list__item-primary-content">
                            <img src="<%=device.ImagePath%>" class="mdl-list__item-avatar">
                            <span><%=device.DeviceName %></span>
                            <span class="mdl-list__item-text-body">
                                <%=device.Description%>
                            </span>
                        </span>
                        <span class="mdl-list__item-secondary-content" onclick="gotoDevice('<%=device.DeviceID%>')">
                            <a class="mdl-list__item-secondary-action">
                                <i class="material-icons">keyboard_arrow_right</i>
                            </a>
                        </span>
                </li>
                <%})%>
            </ul>
        </div>

    </main>

    <% include ./footer-home.ejs %>
</div>

<script>
    var checkUpdateTime = setInterval(checkUpdate, 60000);

    function checkUpdate() {
        var xhttp = new XMLHttpRequest();
        var url = "/checkUpdate?userID=<%=UserID%>"
        xhttp.onreadystatechange = function() {
            if (this.readyState == 4 && this.status == 200) {

                console.log(this.responseText);
                var notificationList = JSON.parse(this.responseText);
                console.log(notificationList);

                if (notificationList.NotificationList.length > 0) {
                    var txt = ""
                    notificationList.NotificationList.forEach(function(notification) {
                        txt += "<div class=\"mdl-cell mdl-cell--4-col\" id=\"" + notification.NotificationID + "\">";
                        txt += "<div class=\"mdl-card mdl-shadow--2dp\" style=\"width:100%;\">";
                        txt += "<div class=\"mdl-card__title\">";
                        txt += "<h2 class=\"mdl-card__title-text\">";

                        if (notification.NotificationType === "SoftwareUpdate") {
                            txt += "Software Update";
                        } else if (notification.NotificationType === "VideoListUpdate") {
                            txt += "New Vedio for You";
                        } else {
                            txt += "New Audio for You";
                        }

                        txt += "</h2></div>";
                        txt += "<div class=\"mdl-card__supporting-text\">";
                        txt += notification.Description;
                        txt += "</div>";
                        txt += "<div class=\"mdl-card__actions mdl-card--border\">";

                        if (notification.NotificationType === "SoftwareUpdate") {
                            txt += "<a class=\"mdl-button mdl-button--colored mdl-js-button mdl-js-ripple-effect\"" +
                                    "onclick=\"notificationAction(this, '" + notification.NotificationID +
                                    "', 'details', 'SoftwareUpdate')\">";
                            txt += "Details </a>";
                            txt += "<a class=\"mdl-button mdl-button--colored mdl-js-button mdl-js-ripple-effect\"" +
                                    "onclick=\"notificationAction(this, '" + notification.NotificationID +
                                    "', 'agree', 'SoftwareUpdate')\">";
                            txt += "Agree </a>";
                            txt += "<a class=\"mdl-button mdl-button--colored mdl-js-button mdl-js-ripple-effect\"" +
                                    "onclick=\"notificationAction(this, '" + notification.NotificationID +
                                    "', 'cancel','SoftwareUpdate')\">";
                            txt += "Cancel</a>"

                        } else {
                            txt += "<a class=\"mdl-button mdl-button--colored mdl-js-button mdl-js-ripple-effect\"" +
                                    "onclick=\"notificationAction(this, '" + notification.NotificationID +
                                    "', 'details','" + notification.NotificationType + "')\">";
                            txt += "Details </a>";
                            txt += "<a class=\"mdl-button mdl-button--colored mdl-js-button mdl-js-ripple-effect\"" +
                                    "onclick=\"notificationAction(this, '" + notification.NotificationID +
                                    "', 'cancel','" + notification.NotificationType + "')\">";
                            txt += "Cancel</a>";
                        }

                        txt += "</div></div></div>";

                        document.getElementById("notifications").innerHTML = txt;
                    })
                }
            }
        };

        xhttp.open("GET", url, true)
        xhttp.send()
    }

    function notificationAction(button, notificationID, action, type) {

        if (action === "cancel") {
            var child = document.getElementById(notificationID);
            child.parentNode.removeChild(child)
        }

        var xhttp = new XMLHttpRequest();
        var url = "/notification?notification=" + notificationID + "&Action=" + action + "&Type=" + type
        console.log("Send URL: " + url)
        if (action === "details") {
            window.location = url;
        } else {
            xhttp.open("GET", url, true)
            xhttp.send()
        }
    }

    function gotoDevice(deviceID) {
        var url = "/device?deviceID=" + deviceID
        window.location = url
    }

    function gotoHome() {
        window.location = "/profile";
    }

    function gotoDevices() {
        window.location = "/devices?userID=<%=UserID%>";
    }

    function gotoAddDevice() {
        window.location = "/addDevice";
    }

    function gotoLogout() {
        window.location = "/logout";
    }

function UpdateSoftware(peer_id){

}

/*function deletePost(peer_id){

    //var url_str = "<%/*=url*/%>";
    var url_str = "";
	url_str = url_str + "/deleteDevice/?PeerId=" + peer_id; 
	console.log(url_str);
        var xhttp = new XMLHttpRequest();
  	xhttp.onreadystatechange = function() {
    		if (xhttp.readyState == 4 && xhttp.status == 200) {
			var obj = JSON.parse(xhttp.responseText)
			if(obj.status == "success"){
				document.getElementById(peer_id).remove();
				var div_alert = document.getElementById('message_div');
				div_alert.innerHTML = "Device Deleted Successfully";
				div_alert.style.display='block';
				setTimeout(hideAlert, 6000);
			}
			else if(obj.status == "refresh"){

				var retVal = confirm("Stale Page. Do you want to refresh the page ?");
   				if (retVal == true) {
	    				window.location.reload();
   				} else {
    	
   				}	
			}
			else{
				document.getElementById('message_div').innerHTML = "Device Delete Unsuccessful";
				div_alert.style.display='block';
				setTimeout(hideAlert, 6000);				
			}
			
    		}
  	};
  	xhttp.open("GET", url_str, true);
  	xhttp.send();

}*/


/*function deleteDevice(button){
 
   var retVal = confirm("Are you sure you want to delete this device permanently ?");
   if (retVal == true) {
    	deletePost(button.getAttribute("value"));
   } else {
    	
   }	
}*/

/*function postItem(element,post_interval,interval,div_element) {
	var el = document.getElementById(element);
	var peer_id = el.getAttribute("value1");
	var peer_state = el.getAttribute("value2");
	var div = document.getElementById(div_element);
	var url_str = "<%/*=url*/%>";
	url_str = url_str + "/stateUpdate/?PeerId=" + peer_id + "&State=" + peer_state; 
	//console.log(url_str);
        var xhttp = new XMLHttpRequest();
  	xhttp.onreadystatechange = function() {
    		if (xhttp.readyState == 4 && xhttp.status == 200) {
			var obj = JSON.parse(xhttp.responseText);
			if(obj.state == ""){
      				console.log("No State change");
			}
			else{
				clearInterval(post_interval);
				clearInterval(interval);
				div.style.display='none';
				el.innerHTML = "Device Status: " + obj.state;
				el.setAttribute("value2",obj.state_num);
			}
			
    		}
  	};
  	xhttp.open("GET", url_str, true);
  	xhttp.send();

}//postItem()

function hideAlert(){	
	var alert_div = document.getElementById('message_div');
	if(alert_div)
	alert_div.style.display='none';
}

setTimeout(hideAlert, 6000);

function countdown(element, minutes, seconds) {
    // Fetch the display element
    var el = document.getElementById(element);
    var eld = 'D' + element; 
    // Set the timer
    var post_interval = setInterval(function() {
        postItem(eld,post_interval, interval,element);
    }, 5000);

    var interval = setInterval(function() {
        if(seconds == 0) {
            if(minutes == 0) {
                (el.innerHTML = "Authenticating Please Wait... ");     
                clearInterval(interval);
		
                return;
            } else {
                minutes--;
                seconds = 60;
            }
        }

        if(minutes > 0) {
            var minute_text = minutes + (minutes > 1 ? ' minutes' : ' minute');
        } else {
            var minute_text = '';
        }

        var second_text = seconds > 1 ? 'seconds' : 'second';
        el.innerHTML = 'Please wait for:' + minute_text + ' ' + seconds + ' ' + second_text + '';
        seconds--;
    }, 1000);

   

}

function callTimers(){
	var element;
	var elm;	
	for(i=0;;i++){
		element = 'countdown' + i;
		elm = 'Dcountdown' + i;
		console.log(element);
		var el = document.getElementById(element);
		if(el){
			var sec = el.getAttribute("value");
			console.log(sec + ':' + parseInt(sec));
			var state = document.getElementById(elm).getAttribute("value2");
			if(parseInt(state) != 4 && parseInt(state) != 0) 
			countdown(element,0,parseInt(sec));
		}
		else
		break;	
	}
}*/

//callTimers();

/* Open when someone clicks on the span element */
function openNav(btn) {
    document.getElementById("myNav").style.width = "100%";
    
    var val = "https://127.0.0.1:8080/?PeerID="+btn.getAttribute("value3")+"&Noob=" + btn.getAttribute("value1") + "&Hoob=" + btn.getAttribute("value2");
    var overlay = document.getElementById("overlay");
    overlay.setAttribute("style", "background-color: white;")
    var content = document.createElement('div');
    content.setAttribute("id","overlayContent");
    content.setAttribute("style","text-align:-moz-center;");
    overlay.appendChild(content);
    var qrcode = new QRCode(content, {
			 width : 300,
			 height : 300
    });
    qrcode.makeCode(val);
}

/* Close when someone clicks on the "x" symbol inside the overlay */
function closeNav() {
    document.getElementById("myNav").style.width = "0%";
    document.getElementById("overlayContent").remove();
}
</script>

</body>
</html>
